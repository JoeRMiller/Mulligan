// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mulligan.Core.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mulligan.Core.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("HoleSequence");

            modelBuilder.HasSequence<int>("TeeSetSequence");

            modelBuilder.Entity("Mulligan.Core.Models.Course", b =>
                {
                    b.Property<int>("NCRDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NCRDId"));

                    b.Property<int>("ClassType")
                        .HasColumnType("integer");

                    b.Property<int>("Classification")
                        .HasColumnType("integer");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NCRDId");

                    b.HasIndex("FacilityId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Facility", b =>
                {
                    b.Property<int>("NCRDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NCRDId"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EntCountryCode")
                        .HasColumnType("integer");

                    b.Property<int>("EntStateCode")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NCRDId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Hole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"HoleSequence\"')");

                    b.Property<int>("Hdcp")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("Par")
                        .HasColumnType("integer");

                    b.Property<int>("TeeSetId")
                        .HasColumnType("integer");

                    b.Property<int>("Yardarge")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeeSetId");

                    b.HasIndex("Id", "TeeSetId", "Number")
                        .IsUnique();

                    b.ToTable("Hole");
                });

            modelBuilder.Entity("Mulligan.Core.Models.TeeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"TeeSetSequence\"')");

                    b.Property<decimal>("BackRating")
                        .HasColumnType("numeric");

                    b.Property<int>("BackSlope")
                        .HasColumnType("integer");

                    b.Property<decimal>("BogeyRating")
                        .HasColumnType("numeric");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<decimal>("CourseRating")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FrontRating")
                        .HasColumnType("numeric");

                    b.Property<int>("FrontSlope")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Par")
                        .HasColumnType("integer");

                    b.Property<int>("Slope")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId", "Name", "Gender")
                        .IsUnique();

                    b.ToTable("Tees");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Course", b =>
                {
                    b.HasOne("Mulligan.Core.Models.Facility", "Facility")
                        .WithMany("Courses")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Hole", b =>
                {
                    b.HasOne("Mulligan.Core.Models.TeeSet", "TeeSet")
                        .WithMany("Holes")
                        .HasForeignKey("TeeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeeSet");
                });

            modelBuilder.Entity("Mulligan.Core.Models.TeeSet", b =>
                {
                    b.HasOne("Mulligan.Core.Models.Course", "Course")
                        .WithMany("Tees")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Course", b =>
                {
                    b.Navigation("Tees");
                });

            modelBuilder.Entity("Mulligan.Core.Models.Facility", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Mulligan.Core.Models.TeeSet", b =>
                {
                    b.Navigation("Holes");
                });
#pragma warning restore 612, 618
        }
    }
}
